<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:behav="clr-namespace:IdentityMine.Windows.SimpleMultitouch;assembly=IdentityMine.Windows.SimpleMultitouch"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
    xmlns:control="clr-namespace:FlashCards.UI.Controls"
    xmlns:local="clr-namespace:FlashCards.UI"
	mc:Ignorable="d"
	x:Class="FlashCards.UI.MatchingGame"
	x:Name="UserControl"
	d:DesignWidth="1162" d:DesignHeight="699.716" FontSize="20" Foreground="#FF393939" >
	<UserControl.Resources>

        <Storyboard x:Key="StopFireWorksAnimation">
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Emitter" Storyboard.TargetProperty="(control:ParticleEmitter.IsEmitting)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.4000000" Value="False"/>
            </BooleanAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackToHomeButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackToHomeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="FireWorksAnimation">
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Emitter" Storyboard.TargetProperty="(control:ParticleEmitter.IsEmitting)">
            	<DiscreteBooleanKeyFrame KeyTime="00:00:00.2000000" Value="True"/>
            	<DiscreteBooleanKeyFrame KeyTime="00:00:00.5000000" Value="False"/>
            	<DiscreteBooleanKeyFrame KeyTime="00:00:00.8000000" Value="True"/>
            	<DiscreteBooleanKeyFrame KeyTime="00:00:01.1000000" Value="False"/>
            	<DiscreteBooleanKeyFrame KeyTime="00:00:01.4000000" Value="True"/>
                <DiscreteBooleanKeyFrame KeyTime="00:00:02.6000000" Value="False"/>
            </BooleanAnimationUsingKeyFrames>

            <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Emitter" 
                                          Storyboard.TargetProperty="RelativeEmitLocation">
                <DiscretePointKeyFrame KeyTime="00:00:00.1" Value="0,0"/>
                <DiscretePointKeyFrame KeyTime="00:00:00.7" Value="0.5,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.2" Value="0.5,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.5" Value="0.5,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.6" Value="0.3,0.3"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.7" Value="0.3,0.7"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.8" Value="0.7,0.7"/>
                <DiscretePointKeyFrame KeyTime="00:00:01.9" Value="0.7,0.3"/>
                <DiscretePointKeyFrame KeyTime="00:00:02.0" Value="0.4,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:02.1" Value="0.6,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:02.2" Value="0.48,0.5"/>
                <DiscretePointKeyFrame KeyTime="00:00:02.3" Value="0.52,0.5"/>
            </PointAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.5000000" Value="1.3"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.5000000" Value="1.3"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(UIElement.Opacity)">
            	<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0,0,0,1"/>
            	<SplineDoubleKeyFrame KeyTime="00:00:03.7000000" Value="1"/>
            	<SplineDoubleKeyFrame KeyTime="00:00:04.7000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackToHomeButton" Storyboard.TargetProperty="(UIElement.Visibility)">
            	<DiscreteObjectKeyFrame KeyTime="00:00:04" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackToHomeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
            	<SplineDoubleKeyFrame KeyTime="00:00:04" Value="0"/>
            	<SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:05" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
			<UniformGrid IsItemsHost="True" Rows="{Binding Rows}" Columns="{Binding Columns}" />
		</ItemsPanelTemplate>
		<Style x:Key="ListBoxItemStyle_CardPair" TargetType="{x:Type ListBoxItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
					    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        <Style x:Key="ListBoxItemStyle_MatchingGameCardPair" TargetType="{x:Type ListBoxItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="CarPair_Template">
            <DataTemplate.Resources>
                <Storyboard x:Key="LoadingAnimation">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0,0,0,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.2000000" Value="1.2"/>
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.4000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.2000000" Value="1.2"/>
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.4000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="MatchingAnimation">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0,0,0,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
 
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:01" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">

                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:01" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="MouseOver">
               
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Opacity)">
                		<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0,0,0,1"/>
                	</DoubleAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
						<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
					</ObjectAnimationUsingKeyFrames>
						
                </Storyboard>
                <Storyboard x:Key="MouseOut">
                	
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Opacity)">
                		<SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.5" Value="0"/>
                	</DoubleAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:01" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
						<DiscreteObjectKeyFrame KeyTime="00:00:00.5" Value="{x:Static Visibility.Visible}"/>
					</ObjectAnimationUsingKeyFrames>
							
                </Storyboard>
                <Storyboard x:Key="SelectedStoryboard"  AccelerationRatio="0.5" DecelerationRatio="0.5" SpeedRatio="3">
                	<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlowIndicators" Storyboard.TargetProperty="(UIElement.Opacity)">
                		<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                		<SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                		<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
                	</DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
			<Viewbox x:Name="RootGrid" Stretch="Uniform" Opacity="0" RenderTransformOrigin="0.5,0.5" >
                <Viewbox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0" ScaleY="0"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Viewbox.RenderTransform>
                <Grid>
                    <Grid x:Name="GlowIndicators" RenderTransformOrigin="0.5,0.5" Width="200" Height="200">
                    	<Grid.RenderTransform>
                    		<TransformGroup>
                    			<ScaleTransform/>
                    			<SkewTransform/>
                    			<RotateTransform/>
                    			<TranslateTransform/>
                    		</TransformGroup>
                    	</Grid.RenderTransform>
                        <Border 
                			x:Name="PressedIndicatorBorder"
                			
                			CornerRadius="8"
                			BorderBrush="{x:Null}" Visibility="Collapsed"
                			BorderThickness="1" Background="White" >
                        <Border.Effect>
                            <BlurEffect Radius="35"/>
                        </Border.Effect>
                    </Border>
                    <Rectangle x:Name="MouseOverIndicator" Fill="white" Opacity="0" Visibility="Collapsed" Margin="5">
                        <Rectangle.Effect>
                            <BlurEffect Radius="35"/>
                        </Rectangle.Effect>
                    </Rectangle>
                        </Grid>
                    <control:Flipper3DControl x:Name="flipper" 
                                          IsFlipped="{Binding IsSelected,Mode=TwoWay}" Background="Transparent" 
                                          Width="200" Height="200" >
                    <i:Interaction.Behaviors>
                        <behav:TapBehavior Tap="TapBehavior_Tap" />
                        <behav:Flickable HorizontalFlick="Flickable_HorizontalFlick" />
                    </i:Interaction.Behaviors>
                    <control:Flipper3DControl.FrontContent>
                    <Grid>
                        <local:CardViewGame x:Name="leftCardEditView" Visibility="Collapsed" DataContext="{Binding Card1}" VerticalAlignment="Center"   Grid.Column="1" RenderTransformOrigin="0.5,0.5" Margin="0"  />
                       
						<Image Stretch="Uniform" Source="{DynamicResource CardBackDrawingImage}" x:Name="cardCover" Margin="0" />
                 
                        
					</Grid>                           
                </control:Flipper3DControl.FrontContent>
                <control:Flipper3DControl.BackContent>
                        <Grid>
						
                            <local:CardViewGame x:Name="rightCardEditView" DataContext="{Binding Card2}" VerticalAlignment="Center"  Grid.Column="1" RenderTransformOrigin="0.5,0.5" Background="Transparent" Margin="2"  />
                </Grid></control:Flipper3DControl.BackContent>
            </control:Flipper3DControl>
                    </Grid>
		</Viewbox>

            <DataTemplate.Triggers>
        		<Trigger Property="IsMouseOver" Value="True" SourceName="flipper">
        			<Trigger.ExitActions>
        				<BeginStoryboard x:Name="MouseOut_BeginStoryboard" Storyboard="{StaticResource MouseOut}"/>
        			</Trigger.ExitActions>
        			<Trigger.EnterActions>
        				<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOver}"/>
        			</Trigger.EnterActions>
        		</Trigger>
        		<DataTrigger Binding="{Binding IsMatchingGame}" Value="True">
        			<Setter Property="Visibility" Value="Visible" TargetName="leftCardEditView"/>
        			<Setter Property="Visibility" Value="Collapsed" TargetName="cardCover"/>
        		</DataTrigger>

        		<DataTrigger Binding="{Binding IsLoaded}" Value="True">
        			<DataTrigger.EnterActions>
        				<BeginStoryboard Storyboard="{StaticResource LoadingAnimation}"/>
        			</DataTrigger.EnterActions>
        		</DataTrigger>

        		<DataTrigger Binding="{Binding IsMatched}" Value="True">
        			<DataTrigger.EnterActions>
        				<BeginStoryboard Storyboard="{StaticResource MatchingAnimation}"/>
                        <BeginStoryboard Storyboard="{StaticResource MouseOut}"/>
        			</DataTrigger.EnterActions>
					<Setter TargetName="PressedIndicatorBorder" Property="Visibility" Value="Collapsed" />
        		</DataTrigger>

              <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource SelectedStoryboard}"/>
                    </DataTrigger.EnterActions>
					    <DataTrigger.ExitActions>
                        <BeginStoryboard  Storyboard="{StaticResource SelectedStoryboard}"/>
                    </DataTrigger.ExitActions>
                    <Setter TargetName="PressedIndicatorBorder" Property="Visibility" Value="Visible" />
              
                </DataTrigger>      
        	</DataTemplate.Triggers>
        
        </DataTemplate>
        <DataTemplate x:Key="MatchingGameCarPair_Template">
            <DataTemplate.Resources>
                <Storyboard x:Key="LoadingAnimation">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0,0,0,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.2000000" Value="1.2"/>
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.4000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.2000000" Value="1.2"/>
                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:00.4000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="MatchingAnimation">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0,0,0,1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">

                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:01" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">

                        <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:01" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
				
				                <Storyboard x:Key="MouseOver">
           
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Opacity)">
                		<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" KeySpline="0,0,0,1"/>
                	</DoubleAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
						<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
					</ObjectAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="MouseOut">
            
					<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Opacity)">
                		<SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="00:00:01" Value="0"/>
                	</DoubleAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
						<DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Collapsed}"/>
					</ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Viewbox x:Name="RootGrid" Stretch="Uniform" Opacity="0" RenderTransformOrigin="0.5,0.5" Margin="12" >
                <!--<i:Interaction.Behaviors>
                    <behav:TapBehavior Tap="TapBehavior_Tap" />
                </i:Interaction.Behaviors>-->
                <Viewbox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Viewbox.RenderTransform>
                <Grid Width="200" Height="200">
				   <Rectangle x:Name="MouseOverIndicator" Fill="white" Opacity="0" Visibility="Collapsed" >
                        	<Rectangle.Effect>
                        		<BlurEffect Radius="35"/>
                        	</Rectangle.Effect>
                        </Rectangle>
                    <Border Visibility="Collapsed"
                			x:Name="PressedIndicatorBorder"
                			Margin="-4" 
                			CornerRadius="8"
                			BorderBrush="{x:Null}"
                			BorderThickness="1" Background="White" >
                        <Border.Effect>
                            <BlurEffect Radius="18"/>
                        </Border.Effect>
                    </Border>
                    <local:CardViewGame  DataContext="{Binding Card1}" x:Name="CardUI"  />
                    </Grid>

            </Viewbox>

            <DataTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="True" SourceName="CardUI">
        			<Trigger.ExitActions>
        				<BeginStoryboard x:Name="MouseOut_BeginStoryboard" Storyboard="{StaticResource MouseOut}"/>
        			</Trigger.ExitActions>
        			<Trigger.EnterActions>
        				<BeginStoryboard x:Name="MouseOver_BeginStoryboard" Storyboard="{StaticResource MouseOver}"/>
        			</Trigger.EnterActions>
        		</Trigger>
    
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="PressedIndicatorBorder" Property="Visibility" Value="Visible" />
                    <Setter TargetName="RootGrid" Property="Margin" Value="0" />
                </DataTrigger>              

                <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource LoadingAnimation}"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsMatched}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MatchingAnimation}"/>
                    </DataTrigger.EnterActions>
					<Setter TargetName="PressedIndicatorBorder" Property="Visibility" Value="Collapsed" />
                </DataTrigger>


            </DataTemplate.Triggers>

        </DataTemplate>
        <ControlTemplate x:Key="ListBoxControlTemplate1" TargetType="{x:Type ListBox}">
			<Grid>
				<ItemsPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="GameListBox" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="ItemsPanel" Value="{DynamicResource ItemsPanelTemplate1}"/>
			<Setter Property="SelectionMode" Value="Multiple"/>
			<Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle_CardPair}"/>		
			<Setter Property="ItemTemplate" Value="{DynamicResource CarPair_Template}"/>		
			<Setter Property="Template" Value="{DynamicResource ListBoxControlTemplate1}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMatchingGame}" Value="True">
                    <Setter Property="ItemTemplate" Value="{DynamicResource MatchingGameCarPair_Template}"/>
                    <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle_MatchingGameCardPair}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
	
		<Style x:Key="BackToHomeRoundButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Viewbox x:Name="Root" Stretch="Uniform" RenderTransformOrigin="0.5,0.5">
							<!--<i:Interaction.Behaviors>
								<behav:TapBehavior/>
							</i:Interaction.Behaviors>-->
							<Viewbox.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Viewbox.RenderTransform>
							<Grid Width="55" Height="55">
								<Path x:Name="MousePressIndicator" Stretch="Fill" Data="F1M327.279,394.45C327.279,408.234,338.494,419.449,352.278,419.449L352.278,419.449C366.063,419.449,377.278,408.234,377.278,394.45L377.278,394.45C377.278,380.664,366.063,369.449,352.278,369.449L352.278,369.449C338.494,369.449,327.279,380.664,327.279,394.45" Margin="2.5,2.5,2.501,2.5" Fill="White" Opacity="0">
									<Path.Effect>
										<BlurEffect Radius="37"/>
									</Path.Effect>
								</Path>
								<Path Stretch="Fill" Data="F1M327.279,394.45C327.279,408.234,338.494,419.449,352.278,419.449L352.278,419.449C366.063,419.449,377.278,408.234,377.278,394.45L377.278,394.45C377.278,380.664,366.063,369.449,352.278,369.449L352.278,369.449C338.494,369.449,327.279,380.664,327.279,394.45" Margin="2.5,2.5,2.501,2.5">
									<Path.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFF7C200" Offset="0"/>
											<GradientStop Color="#FFA44300" Offset="1"/>
										</LinearGradientBrush>
									</Path.Fill>
								</Path>
								<Path Fill="White" Stretch="Fill" Data="F1M352.2783,366.9492C337.1143,366.9492,324.7783,379.2852,324.7783,394.4492C324.7783,409.6122,337.1143,421.9492,352.2783,421.9492C367.4423,421.9492,379.7783,409.6122,379.7783,394.4492C379.7783,379.2852,367.4423,366.9492,352.2783,366.9492 M352.2783,371.9492C364.7053,371.9492,374.7783,382.0222,374.7783,394.4492C374.7783,406.8762,364.7053,416.9492,352.2783,416.9492C339.8513,416.9492,329.7783,406.8762,329.7783,394.4492C329.7783,382.0222,339.8513,371.9492,352.2783,371.9492"/>
								<Path Fill="White" Stretch="Fill" Data="M9.1010001,11.005024 C9.3969999,12.584023 9.5389998,14.457021 9.2430003,16.456019 9.1190002,17.296018 9.5869997,18.111018 10.373999,18.428018 10.596999,18.518018 10.828998,18.560018 11.057998,18.560018 11.638998,18.560018 12.201997,18.284019 12.554997,17.789018 15.753994,13.287022 20.674989,11.698023 20.723989,11.683023 20.820989,11.652023 20.911988,11.611023 20.999988,11.566023 L22.516987,27.97701 4.458005,29.645009 2.7900066,11.588023 z M20.867103,7.2750239 C21.695106,7.2750239 22.595109,7.9170308 23.409112,8.8460407 23.516112,9.1020432 23.599113,9.3720465 23.626113,9.6610489 L25.294118,27.720239 C25.435119,29.252255 24.305115,30.614268 22.77211,30.755271 L4.7140441,32.424289 C3.1830387,32.564288 1.8220334,31.434278 1.6800332,29.901261 L0.012026787,11.843072 C-0.12997341,10.312056 1.0020304,8.9500418 2.5330362,8.8090401 L8.3700576,8.2700348 C8.5100579,8.6710386 8.6530584,9.1280432 8.787059,9.633049 L2.6610365,10.199055 C1.8950338,10.269055 1.3300319,10.948063 1.401032,11.715071 L3.0690379,29.773261 C3.1400385,30.540269 3.8190408,31.105273 4.5860438,31.034274 L22.644109,29.367255 C23.410111,29.295255 23.975114,28.616248 23.905113,27.848241 L22.237107,9.7900505 C22.193108,9.3210459 21.919106,8.9280415 21.538105,8.7090387 21.237104,8.372036 20.819102,8.1470337 20.349101,8.1030331 L19.416098,7.9960318 C19.910099,7.5230269 20.401101,7.2750239 20.867103,7.2750239 z M20.478059,0.00073795256 C25.853034,-0.09932861 29.463292,10.00327 27.855937,14.529045 27.815928,10.344056 21.173963,-0.35783803 16.188972,9.4770908 L20.174975,9.9300585 20.177966,9.9300585 C20.177966,9.9300585 14.684981,11.62206 11.058015,16.725007 11.973996,10.531066 9.1890057,5.5091109 9.1890056,5.5091105 L12.378993,7.943078 C15.227108,2.1996958 18.034889,0.04622246 20.478059,0.00073795256 z" Margin="13.379,10.099,13.38,12.465"/>
								<TextBlock Text="{StaticResource Resource_ChooseAnotherDeck}" TextWrapping="Wrap" Foreground="White" FontFamily="Segoe UI Light" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Margin="-40,0" FontSize="13.333">
									<TextBlock.Background>
										<SolidColorBrush/>
									</TextBlock.Background>
									<TextBlock.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform Y="52"/>
										</TransformGroup>
									</TextBlock.RenderTransform>
								</TextBlock>
							</Grid>
						</Viewbox>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" TargetName="MousePressIndicator" Value="1"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Opacity" TargetName="MousePressIndicator" Value="1"/>
								<Setter Property="RenderTransform" TargetName="Root">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform Y="1"/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid x:Name="LayoutRoot">
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Grid Grid.ColumnSpan="2" >
			<Grid.RowDefinitions>
				<RowDefinition Height="115"/>
				<RowDefinition/>
				<RowDefinition Height="50"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Rectangle x:Name="BackgroundRectangle" Grid.RowSpan="3">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FF0BB9F2" Offset="0.02"/>
						<GradientStop Color="#FF04409F" Offset="0.992"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>
            
            <control:ParticleEmitter x:Name="Emitter" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5">
            	<control:ParticleEmitter.RenderTransform>
            		<TransformGroup>
            			<ScaleTransform/>
            			<SkewTransform/>
            			<RotateTransform/>
            			<TranslateTransform/>
            		</TransformGroup>
            	</control:ParticleEmitter.RenderTransform>
            </control:ParticleEmitter>
            
            <Rectangle Fill="#19FFFFFF" Grid.Row="2"/>
			<Rectangle Fill="#19FFFFFF" Grid.Row="2" VerticalAlignment="Top" Height="1"/>
			<Viewbox  Stretch="Uniform"  Margin="30,10" Grid.Column="1" Grid.Row="1" x:Name="GameViewbox">
		
				<ListBox ItemsSource="{Binding CardPairs}"
					
					Style="{DynamicResource GameListBox}" />
			</Viewbox>

            <Viewbox x:Name="viewbox" Grid.Row="1" d:LayoutOverrides="Width, Height" Margin="100,0" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                <Viewbox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Viewbox.RenderTransform>
				<Grid  Width="151.96">		
				
                <TextBlock Text="{StaticResource Resource_SuccessMessage}" TextWrapping="Wrap" Foreground="White" FontWeight="Bold" TextAlignment="Center" FontFamily="Segoe UI Semibold" FontSize="21.333" RenderTransformOrigin="0.5,0.5">
                	<TextBlock.RenderTransform>
                		<TransformGroup>
                			<ScaleTransform/>
                			<SkewTransform/>
                			<RotateTransform/>
                			<TranslateTransform Y="-7"/>
                		</TransformGroup>
                	</TextBlock.RenderTransform>
                </TextBlock>
				</Grid>
            </Viewbox>

        
        </Grid>
		<Image HorizontalAlignment="Left" VerticalAlignment="Top" Source="..\..\Resource\Images\FlashCardLogo.png" IsHitTestVisible="False" MaxWidth="680"/>
		<StackPanel Orientation="Horizontal" Margin="0,10,20,0" VerticalAlignment="Top" Height="95" Grid.Column="1" d:LayoutOverrides="Width, GridBox" HorizontalAlignment="Right">
			<Viewbox HorizontalAlignment="Center" VerticalAlignment="Stretch" Stretch="Uniform" Margin="0,0,10,0" >
				<Grid >
					<ContentControl Content="{Binding SelectedDeck}" ContentTemplate="{DynamicResource CurrentCardDeckViewTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,0,-0.001" d:LayoutOverrides="Width, Height"  />
					<Image HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="189" Height="182" Source="..\..\Resource\Images\DeckStack.png" Stretch="Fill" Visibility="Collapsed"/>
				</Grid>
			</Viewbox>
			<StackPanel Orientation="Vertical" VerticalAlignment="Center"  d:LayoutOverrides="Height" Margin="0">
				<StackPanel  Orientation="Horizontal">
					<TextBlock HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Center" d:LayoutOverrides="HorizontalAlignment" Margin="0,0,10,0" FontFamily="Segoe UI Light" FontSize="18.667" Foreground="White" Text="{StaticResource Resource_Deck}" Visibility="Collapsed"/>
				
					<TextBlock HorizontalAlignment="Left" Text="{Binding SelectedDeck.Title}" TextWrapping="NoWrap" VerticalAlignment="Center" d:LayoutOverrides="HorizontalAlignment" FontSize="21.333" Foreground="White" FontFamily="Segoe UI Semibold"/>
				</StackPanel>
				<StackPanel  Orientation="Horizontal">
					<TextBlock HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Center" d:LayoutOverrides="HorizontalAlignment" Margin="0,0,10,0" FontFamily="Segoe UI Light" FontSize="18.667" Foreground="White" Text="{StaticResource Resource_Mode}" Visibility="Collapsed"/>
				
					<TextBlock HorizontalAlignment="Left" Text="{Binding GameName}" TextWrapping="NoWrap" VerticalAlignment="Center" d:LayoutOverrides="HorizontalAlignment" FontFamily="Segoe UI Light" FontSize="18.667" Foreground="White"/>
				</StackPanel>
			</StackPanel>
			<Grid Margin="40,0,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.526*"/>
					<ColumnDefinition Width="0.474*"/>
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="1">
					<Rectangle Fill="#FF164EA7" RadiusX="10" RadiusY="10" HorizontalAlignment="Left" Width="85" Height="85">
						<Rectangle.Effect>
							<BlurEffect Radius="10"/>
						</Rectangle.Effect>
					</Rectangle>
					<Rectangle Fill="White" RadiusX="10" RadiusY="10" HorizontalAlignment="Left" Width="85" Height="85"/>
					<TextBlock Text="{Binding Matches, Mode=Default, FallbackValue=0}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Segoe UI Semibold" FontSize="64" Margin="0,5,0,17">
						<TextBlock.Foreground>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFFCCA5F" Offset="0"/>
								<GradientStop Color="#FFF78314" Offset="1"/>
							</LinearGradientBrush>
						</TextBlock.Foreground>
					</TextBlock>
					<TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="Segoe UI Semibold" FontSize="18.667" Margin="0,5,0,8" Text="{StaticResource Resource_MatchesLowerCase}">
						<TextBlock.Foreground>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFFCCA5F" Offset="0"/>
								<GradientStop Color="#FFF78314" Offset="1"/>
							</LinearGradientBrush>
						</TextBlock.Foreground>
					</TextBlock>
				</Grid>
				<TextBlock VerticalAlignment="Center" Foreground="White" Text="{StaticResource Resource_Matches}" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Margin="0,0,20,0" FontFamily="Segoe UI Light" FontSize="21.333" Visibility="Collapsed"/>
			</Grid>
		</StackPanel>
		<Button Content="{StaticResource Resource_Back}"   Command="{Binding Cancel}"  HorizontalAlignment="Left" Template="{DynamicResource BackButtonStyle}"
                Margin="20,0,0,0" Width="85" ToolTip="{StaticResource Resource_ToolTip_GoBack}" VerticalAlignment="Bottom" Height="50"/>
        <Button Content="{StaticResource Resource_About}" Click="Button_Click_1" Margin="115,0,0,0"  HorizontalAlignment="Left"
                VerticalAlignment="Bottom" Height="50" Width="90" Template="{DynamicResource HelpButtonStyle}" ToolTip="{StaticResource Resource_ToolTip_About}"/>
        
		<StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Bottom" Height="50" Grid.Column="1" d:LayoutOverrides="Width" HorizontalAlignment="Right">
			<Button  Content="{StaticResource Resource_ResetCards}" Command="{Binding ResetCards}" Template="{DynamicResource ResetCardsButtonStyle}" d:LayoutOverrides="Height" Width="160" ToolTip="{StaticResource Resource_ToolTip_ResetCards}"/>
			<Button Content="{StaticResource Resource_Quit}"  Command="{Binding Quit}" Width="90" Template="{DynamicResource QuitButtonStyle}" ToolTip="{StaticResource Resource_ToolTip_Quit}"/>
		</StackPanel>
	
        <Button x:Name="BackToHomeButton" Content="{StaticResource Resource_Back}"   Command="{Binding Cancel}"  HorizontalAlignment="Center"  Width="285" ToolTip="{StaticResource Resource_ToolTip_GoBack}" VerticalAlignment="Center" Height="167.647" Grid.ColumnSpan="2" Style="{DynamicResource BackToHomeRoundButtonStyle}" Visibility="Collapsed" Opacity="0"/>
			
	</Grid>
	
</UserControl>
