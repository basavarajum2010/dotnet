<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:controls="clr-namespace:FlashCards.UI.Controls"
    xmlns:conv="clr-namespace:FlashCards.UI.Converters"
    xmlns:vm="clr-namespace:FlashCards.ViewModel;assembly=FlashCards.ViewModel.WPF"
    xmlns:behav="clr-namespace:IdentityMine.Windows.SimpleMultitouch;assembly=IdentityMine.Windows.SimpleMultitouch"
    xmlns:common="clr-namespace:FlashCards.UI.Common"
    xmlns:localbehav="clr-namespace:FlashCards.UI.Behaviors"
	mc:Ignorable="d"
	x:Class="FlashCards.UI.DecksView"
	x:Name="UserControl"
	d:DesignWidth="798.5" d:DesignHeight="330.216" FontSize="20" Foreground="White">
	<UserControl.Resources>

        <conv:ObjectToVisibility x:Key="objectToVisibility" />
        <conv:FindCenterableScrollMargin x:Key="scrollmarginConverter" />
        
        <Style x:Key="ScrollingListBoxItem_Style" TargetType="{x:Type ListBoxItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1">
                                <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0.8"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0.8"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>
                            <Storyboard x:Key="Storyboard2">
                                <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Width="Auto" x:Name="Bd" Background="Transparent" RenderTransformOrigin="0.5,0.5" Height="Auto" d:DesignWidth="201" d:DesignHeight="117">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="0"/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                               <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <i:Interaction.Behaviors>
                                <behav:TapBehavior Tap="TapBehavior_Tap" DoubleTap="TapBehavior_DoubleTap" />
                            </i:Interaction.Behaviors>
                        </Grid>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="Selector.IsSelected" Value="False"/>
                    		<Trigger Property="IsSelected" Value="true">
                    			<Trigger.ExitActions>
                    				<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    			</Trigger.ExitActions>
                    			<Trigger.EnterActions>
                    				<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    			</Trigger.EnterActions>
                    			<Setter Property="Foreground" Value="Black"/>
                    			<!--<Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>-->
                    		</Trigger>
                    		<MultiTrigger>
                    			<MultiTrigger.Conditions>
                    				<Condition Property="IsSelected" Value="true"/>
                    				<Condition Property="Selector.IsSelectionActive" Value="false"/>
                    			</MultiTrigger.Conditions>
                    			<Setter Property="Foreground" Value="Black"/>
                    		</MultiTrigger>
                    		<Trigger Property="IsEnabled" Value="false">
                    			<Setter Property="Foreground" Value="Gray"/>
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
            	<Setter.Value>
            		<TransformGroup>
            			<ScaleTransform/>
            			<SkewTransform/>
            			<RotateTransform/>
            			<TranslateTransform Y="0"/>
            		</TransformGroup>
            	</Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="AdminHomeDecksListBoxStyle" TargetType="{x:Type ListBox}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Grid  x:Name="RootGrid">
                            <ScrollViewer Focusable="false" 
                                          Style="{DynamicResource ScrollViewerStyle1}" 
                                          CanContentScroll="True"  HorizontalAlignment="Stretch" >
                                <i:Interaction.Behaviors>
                                        <localbehav:ScrollWithSelectionFocus ItemPanel="{Binding ElementName=panel}" />
                                    </i:Interaction.Behaviors>
                                <!--<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>-->
                                <Grid ClipToBounds="False" Height="500">
                                   
                                <!--Canvas HorizontalAlignment="Center" ClipToBounds="False" Height="500"-->
                                    <!--controls:CenteringStackPanel CenteredIndex="{TemplateBinding SelectedIndex}" IsItemsHost="True" Orientation="Horizontal"/-->
                                    <StackPanel Loaded="panel_Loaded" x:Name="panel" Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ActualWidth, Converter={StaticResource scrollmarginConverter}}" IsItemsHost="True" Orientation="Horizontal"/>
                                <!--/Canvas-->
                                    </Grid>

                            </ScrollViewer>							
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>

	<Grid x:Name="LayoutRoot">
        <ListBox x:Name="lstDecks" ItemsSource="{Binding Collection}" Margin="0" SelectionChanged="lstDecks_SelectionChanged"
			ItemTemplate="{DynamicResource CardDeckViewTemplate}" BorderBrush="{x:Null}" 
			Style="{DynamicResource AdminHomeDecksListBoxStyle}"  Background="Transparent" VerticalAlignment="Top" 
                 d:IsHidden="True" ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                 ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" 
                 ItemContainerStyle="{DynamicResource ScrollingListBoxItem_Style}">
            <ListBox.CommandBindings>
                <CommandBinding Command="common:Commands.SelectLeft" CanExecute="CommandsSelectLeft_CanExecute" Executed="CommandsSelectLeft_Executed" />
                <CommandBinding Command="common:Commands.SelectRight" CanExecute="CommandsSelectRight_CanExecute" Executed="CommandsSelectRight_Executed" />
            </ListBox.CommandBindings>
        </ListBox>
         <TextBlock HorizontalAlignment="Center" 
                   Visibility="{Binding IsAdmin,Source={x:Static vm:MainViewModel.Instance},Converter={StaticResource objectToVisibility},ConverterParameter=False}"
                   Text="{StaticResource Resource_DeckViewLabel}" TextWrapping="Wrap" FontSize="28" FontFamily="Segoe UI Light" Foreground="White" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height" VerticalAlignment="Top">
        	<TextBlock.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform Y="-45"/>
        		</TransformGroup>
        	</TextBlock.RenderTransform>
        </TextBlock>
    </Grid> 
</UserControl>
